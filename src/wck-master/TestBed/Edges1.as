package {	import Box2DAS.*;	import Box2DAS.Collision.*;	import Box2DAS.Collision.Shapes.*;	import Box2DAS.Common.*;	import Box2DAS.Dynamics.*;	import Box2DAS.Dynamics.Contacts.*;	import Box2DAS.Dynamics.Joints.*;	import misc.*;	import flash.events.*;	import flash.utils.*;		public class Edges1 extends Test {			public function Edges1() {			super();						Main.txt.text = "Edges 1 (working)";						b2Def.body.type = b2Body.b2_dynamicBody;			b2Def.body.position.x = 100 / scale;			b2Def.body.position.y = 100 / scale;			b2Def.body.allowSleep = false;			b2Def.circle.m_radius = 20 / scale;			b2Def.polygon.SetAsBox(20 / scale, 20 / scale);			//b2Def.fixture.shape = b2Def.polygon;			b2Def.fixture.shape = b2Def.circle;			b2Def.fixture.density = 1;			var b:b2Body = b2Def.body.create(this);			b2Def.fixture.create(b);						b2Def.body.type = b2Body.b2_dynamicBody;			b2Def.body.position.x = 250 / scale;			b2Def.body.position.y = 100 / scale;			b2Def.body.allowSleep = false;			b2Def.polygon.SetAsBox(20 / scale, 20 / scale);			b2Def.fixture.shape = b2Def.polygon;			//b2Def.fixture.shape = b2Def.circle;			b2Def.fixture.density = 1;			b = b2Def.body.create(this);			b2Def.fixture.create(b);						b2Def.body.type = b2Body.b2_staticBody;			b2Def.body.position.x = 300 / scale;			b2Def.body.position.y = 400 / scale;			b2Def.fixture.filter.groupIndex = -1;			b2Def.fixture.shape = b2Def.edge;			b2Def.edge.m_vertex0.v2 = new V2(00 / scale, 0 / scale);			b2Def.edge.m_vertex1.v2 = new V2(-100 / scale, 0 / scale);			b2Def.edge.m_vertex2.v2 = new V2(100 / scale, 0 / scale);			b2Def.edge.m_vertex3.v2 = new V2(200 / scale, 50 / scale);			b2Def.edge.m_hasVertex0 = false;			b2Def.edge.m_hasVertex3 = true;			b = b2Def.body.create(this);			b2Def.fixture.create(b);						b2Def.body.type = b2Body.b2_staticBody;			b2Def.body.position.x = 500 / scale;			b2Def.body.position.y = 400 / scale;			b2Def.fixture.filter.groupIndex = -1;			b2Def.fixture.shape = b2Def.edge;			b2Def.edge.m_vertex0.v2 = new V2(-200 / scale, 0 / scale);			b2Def.edge.m_vertex1.v2 = new V2(-100 / scale, 0 / scale);			b2Def.edge.m_vertex2.v2 = new V2(100 / scale, 50 / scale);			b2Def.edge.m_vertex3.v2 = new V2(200 / scale, 100 / scale);			b2Def.edge.m_hasVertex0 = true;			b2Def.edge.m_hasVertex3 = false;			trace(b2Def.edge.m_hasVertex3);			b = b2Def.body.create(this);			b2Def.fixture.create(b);						/*b2Def.fixture.shape = b2Def.loop;			var s:Number =  100 / scale;			var o:Number = 10 / scale;			b2Def.loop.m_vertices = Vector.<V2>([			new V2(-s, -s),			new V2(-s, s),			new V2(s + o, s + o),			new V2(s, -s)			]);			b2Def.body.position.x = 500 / scale;			b2Def.body.position.y = 200 / scale;			b = b2Def.body.create(this);			b2Def.fixture.create(b);*/		}      	}}